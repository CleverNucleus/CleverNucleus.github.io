I"<div class="alert alert-warning" role="alert"><i class="fa fa-warning"></i> <b>Important:</b> This section is now outdated and unsupported. Click <a href="dataattributes-1.18.2_home">here</a> for the latest release.</div>

<h2 id="overview">Overview</h2>

<p>Apart from attribute functions, the second thing added added to entity attributes are attribute properties. These are, in this context, simply extra bits of information appended to entity attributes. They are structured as a map; where both key and value are Strings.</p>

<h2 id="use-cases">Use Cases</h2>

<p>This feature offers little use for pack creators, aside from editing mods attribute’s properties. For mod developers however, this has the potential for more use. Perhaps you are creating a Trinkets addon, and you want to have your trinkets provide attribute bonuses like +30% Damage or +4 Max Health. You need a rarity system for attributes, and rather than creating one from scratch, you can use attribute properties as the framework for this application.</p>

<p>This also serves me personally as a <em>“Oh no I forgot to add this”</em> feature. It allows me to just add a datapack to patch future mods. Finally, this serves as a configuration feature: by using datapacks, any mod built with Data Attributes can be configured without the need for funky configuration magic - and this configuration can be solely server side as this is powered by datapacks.</p>

<h2 id="example-1">Example 1</h2>

<p>Say we have our examplemod, and we want ot assign a <code class="language-plaintext highlighter-rouge">rarity</code> value to each attribute that would range from 0.0 to 1.0. We go to the directory <code class="language-plaintext highlighter-rouge">data/examplemod/attributes/</code> and create the json file <code class="language-plaintext highlighter-rouge">properties.json</code>:</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
    </span><span class="nl">"values"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"minecraft:generic.max_health"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"rarity"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.5"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"minecraft:generic.armor"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"rarity"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0.6"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="err">...</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<p>Where <code class="language-plaintext highlighter-rouge">...</code> would be the rest of the attributes. Here we are adding the <code class="language-plaintext highlighter-rouge">rarity</code> property to Max Health and Armor and assigning each property a relevant value. Note how the value is a string: this is so that floating point numbers can be parsed without a loss in precision, but also so that other data can be appended to attributes - not just numbers.</p>

<h2 id="example-2">Example 2</h2>

<p>In this example we just want to assign a <code class="language-plaintext highlighter-rouge">special</code> boolean to a custom attribute <code class="language-plaintext highlighter-rouge">examplemod:magic</code>. If an attribute has teh special property we can say it is true, if the attribute does not have the special property we can say it is false. Since it is just a case of <em>having</em> the property or not, the value doesn’t matter and can just be an empty string:</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
    </span><span class="nl">"values"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"examplemod:magic"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"special"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<div class="alert alert-info" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b> Attribute Properties are immutable. They can only be accessed and checked for.</div>

:ET